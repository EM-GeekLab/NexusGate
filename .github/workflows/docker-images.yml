name: Build Docker Images
on:
  release:
    types: [published]
  workflow_dispatch:
  push:
    branches:
      - main

env:
  REGISTRY: ghcr.io
  CN_REGISTRY: docker.cnb.cool
  IMAGE_NAME: em-geeklab/nexusgate
  CN_IMAGE_NAME: em-geeklab/nexusgate/server
jobs:
  build-images:
    name: Build and push multi-arch images
    runs-on: ubuntu-24.04
    permissions:
      contents: read
      packages: write
      attestations: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Log in to the CN Container registry
        if: github.event_name == 'release'
        uses: docker/login-action@v3
        with:
          registry: ${{ env.CN_REGISTRY }}
          username: ${{ secrets.CN_REGISTRY_USERNAME }}
          password: ${{ secrets.CN_REGISTRY_PASSWORD }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
            ${{ github.event_name == 'release' && format('{0}/{1}', env.CN_REGISTRY, env.CN_IMAGE_NAME) || '' }}
      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: linux/amd64,linux/arm64
          build-args: COMMIT_SHA=${{ github.sha }}
      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v2
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
          subject-digest: ${{ steps.push.outputs.digest }}
