{
    "components.app.app-error.Error": "error",
    "components.app.app-error.Retry": "Retry",
    "components.app.app-sidebar-footer.GitHub": "GitHub",
    "components.app.app-sidebar-footer.FetchSHAError": "Failed to fetch commit sha",
    "components.app.app-sidebar-footer.VersionMismatch": "The backend version is different from the frontend version",
    "components.app.app-sidebar-footer.CurrentVersion": "Current version",
    "components.app.app-sidebar-footer.FrontendVersion": "Frontend version",
    "components.app.app-sidebar-footer.BackendVersion": "Backend version",
    "components.app.app-sidebar-footer.LatestVersion": "Latest version",
    "components.app.app-sidebar.Requests": "Requests",
    "components.app.app-sidebar.Applications": "Applications",
    "components.app.app-sidebar.Providers": "Providers",
    "components.app.app-sidebar.NexusGate": "NexusGate",
    "components.app.app-sidebar.LLMGateway": "LLM Gateway",
    "components.app.auth-dialog.InvalidSecret": "Invalid secret",
    "components.app.auth-dialog.AuthenticationRequired": "Authentication Required",
    "components.app.auth-dialog.AdminSecret": "Please input the admin secret below",
    "components.app.auth-dialog.Save": "Save",
    "components.ui.breadcrumb.More": "More",
    "components.ui.data-table.NoData": "No data",
    "hooks.use-copy.ClipboardError": "Clipboard not supported",
    "hooks.use-copy.ManualCopy": "You can copy the text below manually",
    "hooks.use-copy.FailedToCopy": "Failed to copy: {{error}}",
    "lib.error.UnknownError": "Unknown error",
    "pages.api-keys.add-button.NewApp": "New application",
    "pages.api-keys.add-button.CreateApp": "Create a new application",
    "pages.api-keys.add-button.CreateAppDesc": "Create a new application for LLM calls",
    "pages.api-keys.add-button.AppCreated": "Application created",
    "pages.api-keys.add-button.AppCreatedDesc": "Your new application with the API key has been created Please copy the API key below and store it in a safe place",
    "pages.api-keys.add-button.Name": "Name",
    "pages.api-keys.add-button.NamePlaceholder": "Enter a name for this application",
    "pages.api-keys.add-button.Expiration": "Expiration",
    "pages.api-keys.add-button.SetExpirationDate": "'Choose an expiration date for the API key of this application, or select no expiration date.",
    "pages.api-keys.add-button.Cancel": "Cancel",
    "pages.api-keys.add-button.Save": "Save",
    "pages.api-keys.add-button.7Days": "7 days",
    "pages.api-keys.add-button.30Days": "30 days",
    "pages.api-keys.add-button.90Days": "90 days",
    "pages.api-keys.add-button.180Days": "180 days",
    "pages.api-keys.add-button.365Days": "365 days",
    "pages.api-keys.add-button.Custom": "Custom",
    "pages.api-keys.add-button.NoExpiration": "No expiration",
    "pages.api-keys.add-button.NoExpirationDate": "No expiration date",
    "pages.api-keys.add-button.APIKeyCopied": "API key copied to clipboard",
    "pages.api-keys.add-button.Close": "Close",
    "pages.api-keys.add-button.Copied": "Copied",
    "pages.api-keys.add-button.Copy": "Copy",
    "pages.api-keys.columns.Name": "Name",
    "pages.api-keys.columns.APIKey": "API key",
    "pages.api-keys.columns.LastSeen": "Last seen",
    "pages.api-keys.columns.NoExpirationDate": "No expiration date",
    "pages.api-keys.columns.CreatedAt": "Created at",
    "pages.api-keys.columns.ExpiresAt": "Expires at",
    "pages.api-keys.columns.Actions": "Actions",
    "pages.api-keys.data-table.View": "View",
    "pages.api-keys.data-table.ShowRevoked": "Show revoked",
    "pages.api-keys.row-action-button.APIKeyCopied": "API key copied to clipboard",
    "pages.api-keys.row-action-button.APIKeyRevoked": "API key revoked",
    "pages.api-keys.row-action-button.AreYouSure?": "Are you sure?",
    "pages.api-keys.row-action-button.APIKeyOfApplicationWillBeRevoked": "The API key of application <bold>{{comment}}</bold> will be revoked.",
    "pages.api-keys.row-action-button.OpenMenu": "Open menu",
    "pages.api-keys.row-action-button.CopyBaseURL": "Copy Base URL",
    "pages.api-keys.row-action-button.CopyAPIKey": "Copy API Key",
    "pages.api-keys.row-action-button.ViewRequests": "View requests",
    "pages.api-keys.row-action-button.RevokeAPIKey": "Revoke API Key",
    "pages.api-keys.row-action-button.Cancel": "Cancel",
    "pages.api-keys.row-action-button.Continue": "Continue",
    "pages.api-keys.invocation-guide.Use": "Use",
    "pages.api-keys.invocation-guide.APIInvocationGuide": "API invocation guide",
    "pages.api-keys.invocation-guide.SetAPIKeyEnvVar": "Set the API key as an environment variable (using Linux as an example):",
    "pages.api-keys.invocation-guide.ReferToCodeForInvocation": "Refer to the following sample code for invocation:",
    "pages.requests.columns.CreatedAt": "Created at",
    "pages.requests.columns.Pending": "Pending",
    "pages.requests.columns.Completed": "Completed",
    "pages.requests.columns.Failed": "Failed",
    "pages.requests.columns.Model": "Model",
    "pages.requests.columns.TTFT": "TTFT",
    "pages.requests.columns.TimeToFirstToken": "Time To First Token",
    "pages.requests.columns.Duration": "Duration",
    "pages.requests.columns.Request": "Request",
    "pages.requests.columns.ReqTok": "Req tok",
    "pages.requests.columns.Response": "Response",
    "pages.requests.columns.RespTok": "Resp tok",
    "pages.requests.columns.Seconds": "S",
    "pages.requests.data-table.NoData": "No data",
    "pages.requests.data-table.ShowingRequestsRange": "Showing {{from}} to {{to}} of {{total}} requests from {{startDate}} to {{endDate}}",
    "pages.requests.data-table.Rows": "Rows",
    "pages.requests.data-table.Page": "Page {{page}} of {{pageCount}}",
    "pages.requests.data-table.First": "First",
    "pages.requests.data-table.Previous": "Previous",
    "pages.requests.data-table.Next": "Next",
    "pages.requests.data-table.Last": "Last",
    "pages.requests.filter-reset-button.ClearFilters": "Clear filters",
    "pages.requests.request-detail-provider.UseRequestDetailError": "useRequestDetail must be used within a RequestDetailProvider",
    "pages.requests.requests-data-provider.UseRequestDataError": "useRequestData must be used within a RequestDataProvider",
    "pages.requests.detail-panel.header.Pretty": "Pretty",
    "pages.requests.detail-panel.header.Raw": "Raw",
    "pages.requests.detail-panel.header.Pending": "Pending",
    "pages.requests.detail-panel.header.Completed": "Completed",
    "pages.requests.detail-panel.header.Failed": "Failed",
    "pages.requests.detail-panel.header.ClosePanel": "Close panel",
    "pages.requests.detail-panel.index.Close": "Close",
    "pages.requests.detail-panel.index.Retry": "Retry",
    "pages.requests.detail-panel.pretty-view.RequestMessages": "Request messages",
    "pages.requests.detail-panel.pretty-view.ResponseMessages": "Response messages",
    "pages.requests.detail-panel.pretty-view.Reasoning": "Reasoning",
    "pages.requests.detail-panel.pretty-view.Seconds": "S",
    "pages.requests.detail-panel.pretty-view.Milliseconds": "ms",
    "pages.requests.detail-panel.pretty-view.RequestID": "Request ID",
    "pages.requests.detail-panel.pretty-view.Model": "Model",
    "pages.requests.detail-panel.pretty-view.TTFT": "TTFT",
    "pages.requests.detail-panel.pretty-view.TimeToFirstToken": "Time to first token",
    "pages.requests.detail-panel.pretty-view.Duration": "Duration",
    "pages.requests.detail-panel.pretty-view.DurationDesc": "Total duration of the request",
    "pages.requests.detail-panel.pretty-view.RequestTokens": "Request tokens",
    "pages.requests.detail-panel.pretty-view.ResponseTokens": "Response tokens",
    "pages.requests.detail-panel.pretty-view.Meta": "Meta",
    "pages.requests.detail-panel.raw-view.RawData": "Raw data",
    "pages.requests.detail-panel.raw-view.RequestMessages": "Request messages",
    "pages.requests.detail-panel.raw-view.ResponseMessages": "Response messages",
    "pages.requests.detail-panel.token-usage.NoTokenData": "No token usage data",
    "pages.requests.detail-panel.token-usage.OneToken": "1 token",
    "pages.upstreams.add-button.NewProvider": "New provider",
    "pages.upstreams.add-button.AddProvider": "Add a new model provider",
    "pages.upstreams.add-button.AddProviderDesc": "Add a model provider for downstream application integration",
    "pages.upstreams.add-button.ProviderName": "Provider name",
    "pages.upstreams.add-button.ProviderNameDesc": "Name to identify the provider",
    "pages.upstreams.add-button.ModelName": "Model name",
    "pages.upstreams.add-button.ModelNameDesc": "Custom model name for downstream applications",
    "pages.upstreams.add-button.ProviderModelName": "Provider model name",
    "pages.upstreams.add-button.ProviderModelNameDesc": "Model name used by the provider",
    "pages.upstreams.add-button.BaseURL": "Base URL",
    "pages.upstreams.add-button.BaseURLDesc": "API endpoint URL of the provider",
    "pages.upstreams.add-button.APIKey": "API key",
    "pages.upstreams.add-button.Cancel": "Cancel",
    "pages.upstreams.add-button.Save": "Save",
    "pages.upstreams.columns.ProviderName": "Provider name",
    "pages.upstreams.columns.Model": "Model",
    "pages.upstreams.columns.ProviderModel": "Provider model",
    "pages.upstreams.columns.BaseURL": "Base URL",
    "pages.upstreams.columns.APIKey": "API key",
    "pages.upstreams.row-action-button.OpenMenu": "Open menu",
    "pages.upstreams.row-action-button.ViewRequests": "View requests",
    "pages.upstreams.row-action-button.Delete": "Delete",
    "pages.upstreams.row-action-button.ProviderWillBeDeleted": "This provider <bold>{{name}}</bold> will be deleted.",
    "pages.upstreams.row-action-button.AreYouSure?": "Are you sure?",
    "pages.upstreams.row-action-button.Cancel": "Cancel",
    "pages.upstreams.row-action-button.Continue": "Continue",
    "routes.apps.index.FetchError": "An error occurred while fetching applications",
    "routes.apps.route.Applications": "Applications",
    "routes.providers.index.FetchError": "An error occurred while fetching providers",
    "routes.providers.route.Providers": "Providers",
    "routes.requests.index.FetchError": "An error occurred while fetching requests",
    "routes.requests.route.Requests": "Requests",
    "routes.dashboard.index.Welcome": "Hello from home",
    "routes.dashboard.route.Overview": "Overview"
}
